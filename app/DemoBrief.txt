一、项目简介
制作Http网络框架
制作的框架：
创建Request请求，然后将请求添加到队列中(RequestQueue)，放到线程池中调用，并进行网络交互
最后返回Response数据，客户端进行回调

优点：
1、Get请求的明文参数可以使用Request来添加参数
2、能够立即停止当前启动的Request请求
3、不利用HashMap减小内存消耗
4、使用线程池，进行数据的网络交互
5、能够从xml中获取需要的网址
6、允许使用XML+RemoteService实现网络封装

①、当页面跳转时候，能够终止异步加载

二、制作流程
①、首先制作HttpRequest
内容要求(满足Get、请求和post请求)
1、成员变量url地址、List存储Request的Header、List存储POST数据、请求参数
存储数据都是存储的键值对，会选择使用HashMap,但是出于性能上的考虑，我们还是选择使用List，降低内存的损耗
HashMap比较耗费内存（个人认为是Hash表需要创建List存储，还有HashMap以创建MapSet的方法存储键值对）
那么就需要创建一个存储键值对的元数据。叫做RequestParameter

②、设置Response
内容要求：（能够获取返回的状态，并获取返回的数据）
该有的参数：1、状态行的状态码 2、返回数据的内容

③、创建网络数据传回的回调接口。
当客户端接收到数据的时候，这值得回调（封装在Request类中，当然也可以仿造Http的解决方法，后面再谈）
回调的任务：
1、失败的时候的回调
2、成功的时候的回调

原理：当成功接受到数据的时候，将Response传递给Request，然后切换线程进行回调。
所以创建接口完之后，需要创建设置回调的方法，Handler，deliverResponse()访法

④、创建请求队列。
要求：
1、在请求队列中创建一个线程池。（自定义）
问题：1、原子类、线程安全的请求队列。
（原子类AtomicXxx，请求队列的使用：http://jiangzhengjun.iteye.com/blog/683593）

2、能够添加Request请求，能够取消某个request请求。能够清空队列中的请求。
（如何移除队列中所有任务，和正在执行异步请求的Thread对象）
（回答：先移除在队列中的数据，然后利用Future移除正在线程池中执行的Thread）

3、之后创建一个NetWork网络交互类，封装Request请求，输入到请求队列中

第一部分就完成了，测试一下可不可以使用
①、测试是否能够接收到数据
②、测试是否能够异步处理。
③、测试是否能够终止页面


第二部分：
1、首先允许Get请求的明文参数，放到RequestParam中
2、能够使用Post请求，上传数据
进行测试(java参数的传递是传递引用)
遇到的问题：（POST请求可以不使用表单上传~~）
无法存储获取到的Cookie
收取到的编码有问题（如何转换编码）

3、接收到的数据使用，经过解析处理（由于本身架构不适宜自己创建解析器处理，暂时先放弃）

3、设定Request请求的优先级
作用：在线程队列中，设定哪个Request优先执行。
①、创建枚举类型
②、重写Comparable方法

(请求的封装)
4、模仿Form表单上传
①、设置表单头。表单头需要有哪些内容（Content-Type，与boundary）
如何设置boundary
1、
③、设置参数数据
问题：没有背下表单上传的格式= =，需要反复记忆

5、混合文件上传

5、将url放到xml中
问题：XML字符串的解析。
XML解析的三种方式

未完成：
1、Cookie的保存（不知道Cookie需要有哪些内容，只知道有name与value）
写一个CookieJar的接口，然后在每次提交的时候，或者获取数据的时候，提取出Cookie放到数据中
2、Response返回的Header的处理（直接不处理了，除了Cookie其他的用处不太大）
(不知道Header中有哪些内容 - -)

3、编码的转换

4、混合文件的上传
①、继承Request，
②、需要用到的参数
③、
5、数据的缓存

6、需要写一个对IO的封装类
